[general]
arch = llvm
mode = 64
syntax = llvm
total_cores = 2

[perf_model/core]
core_model = llvm
type = interval
logical_cpus = 1

# Cache model is same as nehalem
[perf_model/cache]
levels = 2

[perf_model/l1_icache]
perfect = false
cache_size = 32
associativity = 4
address_hash = mask
replacement_policy = lru
data_access_time = 4
tags_access_time = 1
perf_model_type = parallel
writethrough = 0
shared_cores = 1

[perf_model/l1_dcache]
perfect = false
cache_size = 32
associativity = 8
address_hash = mask
replacement_policy = lru
data_access_time = 4
tags_access_time = 1
perf_model_type = parallel
writethrough = 0
shared_cores = 1

[perf_model/l2_cache]
perfect = false
cache_size = 256
associativity = 8
address_hash = mask
replacement_policy = lru
data_access_time = 8
tags_access_time = 3
writeback_time = 50
perf_model_type = parallel
writethrough = 0
shared_cores = 1

# ROB Timer is same as cortex-a53
[perf_model/core/rob_timer]
address_disambiguation = false
commit_width = 2
in_order = true
issue_contention = true
issue_memops_at_issue = true
mlp_histogram = false
outstanding_loads = 8 #?
outstanding_stores = 16 #?
rob_repartition = true
rs_entries = 36
simultaneous_issue = true
store_to_load_forwarding = false

[perf_model/core/interval_timer]
dispatch_width = 4
window_size = 128
num_outstanding_loadstores = 10

[network]
memory_model_1 = emesh_hop_by_hop

[network/emesh_hop_by_hop]
hop_latency = 2            # Per-hop latency in core cycles
link_bandwidth = 64        # Per-link, per-direction bandwidth in bits/cycle
dimensions = 1             # Mesh dimensions (1 for line/ring, 2 for mesh/torus)
wrap_around = true         # Has wrap-around links? (false for line/mesh, true for ring/torus)
concentration = 1          # Number of cores per network interface (must be >= last-level-cache/shared_cores)
